/*!
  \mainpage Embree - High Performance Ray Tracing Kernels

  \image html crown.jpg The emblemic "Crown" model rendered with Embree"

  \section intro Introduction

Embree is a collection of high-performance ray tracing kernels,
developed at Intel. The target user of Embree are graphics application
engineers that want to improve the performance of their application by
leveraging the optimized ray tracing kernels of Embree. The kernels
are optimized for photo-realistic rendering on the latest IntelÂ®
processors with support for SSE, AVX, AVX2, and the 16-wide Xeon Phi
vector instructions. Embree supports runtime code selection to choose
the traversal and build algorithms that best matches the instruction
set of your CPU. Embree is released as Open Source under the Apache
2.0 license.

Embree supports applications written with the Intel SPMD Programm
Compiler (ISPC, http://ispc.github.com) by providing an ISPC interface
to the core ray tracing algorithms. This makes it possible to write a
renderer in ISPC that leverages SSE, AVX, AVX2, and Xeon Phi
instructions without any code change. ISPC also supports runtime code
selection using the multi-target feature. This way it is possible to
let ISPC select at runtime the best code path for your application,
while Embree selects the optimal code path for the ray tracing
algorithms.

Embree contains algorithms optimized for incoherent workloads (e.g.
Monte Carlo ray tracing algorithms) and coherent workloads
(e.g. primary visibility and hard shadow rays). For standard CPUs, the
single-ray traversal kernels in Embree provide the best performance
for incoherent workloads and are very easy to integrate into existing
rendering applications. For Xeon Phi, a renderer written in ISPC using
the optimized hybrid ray/packet traversal algorithms have shown to
perform best and requires writing the renderer in ISPC. In general for
coherent workloads, ISPC outperforms the single ray mode on each
platform. Embree also supports dynamic scenes by implementing high
performance spatial index structure construction algorithms.

In addition to the ray tracing kernels, Embree provides some tutorials
(see \ref embree_tutorials) to demonstrate how to use the Embree API. More documentation about the
API is found in embree/include/embree2/rtcore.h as well as in \ref embree_api .

The sample path tracer that was originally included in the embree
kernel package is now available in a separate GIT branch (see
\ref embree_path_tracer).

\section supported_platforms Supported Platforms 

Embree supports Windows, Linux and MacOSX, each in 32bit and 64bit
modes. The code compiles with the Intel Compiler, the Microsoft
Compiler, GCC and CLANG. Using the Intel Compiler improves performance
by approximately 10%. Performance also varies across different
operating systems. Embree requires a CPU with at least support for
SSE2. Embree is optimized for Intel CPUs supporting SSE, AVX, and AVX2
instructions.

The Xeon Phi version of Embree only works under Linux in 64bit
mode. For compilation of the the Xeon Phi code the Intel Compiler is
required. The host side code compiles with GCC and the Intel Compiler.

\section building_embree_main Building Embree

How embree is built depends on what platform you are using.
Detailed instructions for building Embree on Linux, Windows, and MacOS
can be found in section \ref building_embree .

\section folder_structure Folder Structure 

<dl>
    <dt>embree</dt>                 <dd>Embree ray tracing kernels</dd>
    <dt>embree/include/</dt>        <dd>User API to the ray tracing kernels</dd>
    <dt>kernels</dt>                <dd>The actual Embree Kernels</dd>
    <dt>kernels/xeon</dt>           <dd>Embree kernels for Intel(r) Xeon(r) CPUs</dd>
    <dt>kernels/xeonphi</dt>        <dd>Embree kernels for Intel(r) Xeon Phi(r) Accelerators</dd>
    <dt>tutorials</dt>              <dd>Embree tutorials (\ref embree_tutorials ) </dd>
</dl>

As of version 2.1, the \ref embree_path_tracer that used to come with
earlier versions of Embree is no longer included in the main branch
used for the kernels, and has been moved to a separate branch
dedicated to this path tracer. More information can be found here: \ref embree_path_tracer .

\section contact Contact 

If you have questions related to
Embree -- or if you found a bug -- please contact the Embree developers
at embree_support@intel.com .

 */
